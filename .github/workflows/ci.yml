name: CI

on:
  pull_request:
    branches: [ main, dev, feature/*, release/* ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  push:
    branches: [ main, dev, feature/*, release/* ]
    paths-ignore:
      - '**.md'
      - 'docs/**'

env:
  NODE_VERSION: 22.x

jobs:
  # Cache and install dependencies
  install:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            frontend/node_modules
            graphql-server/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm install

  # Lint and type check
  lint-and-typecheck:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          
      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            frontend/node_modules
            graphql-server/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          
      - name: Run ESLint
        run: npm run lint
        
      - name: Run TypeScript type checking
        run: npm run check

  # Test with coverage
  test:
    runs-on: ${{ matrix.os }}
    needs: install
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            coverage: true
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          
      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            frontend/node_modules
            graphql-server/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          
      - name: Run tests with coverage
        if: matrix.coverage
        run: npm run test:coverage
        
      - name: Run tests
        if: '!matrix.coverage'
        run: npm test
        
      - name: Upload coverage to Codecov
        if: matrix.coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./graphql-server/coverage/lcov.info,./frontend/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  # Build projects
  build:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          
      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            frontend/node_modules
            graphql-server/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          
      - name: Build projects
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            graphql-server/dist
            frontend/build
            frontend/.svelte-kit/output
          retention-days: 1

  # Security audit
  security:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          
      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            frontend/node_modules
            graphql-server/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          
      - name: Run security audit
        run: npm audit --audit-level=moderate
        
      - name: Check for outdated dependencies
        run: npm outdated || true