service:
  name: 3Points-NHL-standing
# 
# plugins:
  # modules:
    # - serverless-plugin-tracing
    # - serverless-webpack

package:
  individually: true

custom:
  stage: ${self:provider.stage}
  region: ${self:provider.region}
  applicationName: 'DBS.Subscribers'
  applicationVersion: ${file(./package.json):version}
  lambdaNamePrefix: NHL3PS
  webpack:
    includeModules:
      forceExclude:
        - aws-sdk

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, "${env:NODE_ENV, 'dev'}"}
  region: ${opt:region, "${env:AWS_DEFAULT_REGION, 'eu-west-1'}"}
  memorySize: 128
  timeout: 30
  logRetentionInDays: 3
  versionFunctions: true
  tracing: true
  apiGateway: ${file(./serverless.events.yml):apiGateway}
  deploymentBucket:
    name: ${cf:${self:custom.resourceStack}.ServerlessDeploymentBucketName}
  deploymentPrefix: subscribers
  
  # ADD S3 Rights here
  # iamRoleStatements:
  #   - Effect: 'Allow'
  #     Action:
  #       - 'logs:CreateLogGroup'
  #     Resource:
  #       - Fn::Join:
  #           - ':'
  #           - - 'arn:aws:logs'
  #             - Ref: 'AWS::Region'
  #             - Ref: 'AWS::AccountId'
  #             - 'log-group'
  #             - Fn::Join:
  #                 - '/'
  #                 - - '/aws'
  #                   - 'lambda'
  #                   - Fn::Join:
  #                       - '-'
  #                       - - '${self:custom.lambdaNamePrefix}'
  #                         - '*'
  #                         - '${self:provider.stage}'
  environment:
    NODE_ENV: ${self:provider.stage}
    XRAY_ENABLED: ${env:XRAY_ENABLED, '1'}
    logGroup: '3PNHL'
    logLevel: dev
    ApplicationName: ${self:custom.applicationName}
    ApplicationVersion: ${self:custom.applicationVersion}
    s3BucketURL: ${self:custom.applicationVersion}

functions:
  fetch:
    handler: src/fetch/fetch.handler
    memorySize: 128
    timeout: 5
    name: '${self:custom.lambdaNamePrefix}-Fetch-${self:provider.stage}'
    summary: Fetch and Compute updated NHL 3 point Standings.
    description: |
      Fetch Calendar and Statistics from NHL API, compute 3 Point standing and export updated standings to S3
    # environment:
      # ComponentName: 'DBS.Subscribers.CreateSubscriber.Lambda'
    events:
      - schedule:
          name: NHL 3PS fetch Schedule
          description: This should run on a daily basis
          rate: cron(0 8 * * ? *)
          enabled: true

# resources: ${file(./serverless.resources.yml):resources}
